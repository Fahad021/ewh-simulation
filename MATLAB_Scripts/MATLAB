clear; clc; close all;
global EWH_population
% Need to declare these values before running
timestep = input('What is the timestep? '); % minute(s)
Days = input('How many days? ');            % how many days are we running the simulation
EWH_population = input('How many EWHs? ');  % number of EWH in our simulation
EWH_type = input('180 or 270 liters? (Type 180 is small or 270 if large) ');
Folder = input('Name folder ','s');
NameFile = input('Name cvs from python ','s');
if EWH_type == 270
    PowerRating = 4.2; % kW, EWH size 270l --> 4.2
else
    PowerRating = 2.8; % kW EWH size 180l --> 2.8
end

timestep_hour = 60/timestep; %number timesteps in an hour
timestep_day = 1440/timestep; %number timesteps in a day
timestep_year = 525600/timestep; %number timesteps in a year
A = zeros(Days,25); %values we want

currentEWH = strcat(NameFile,'.csv');
ds = csvread(currentEWH,1,0);

for n=1:Days
    beginningMP = (timestep_day*(n-1)) + (timestep_hour*6);   % beginning morning peak
    endMP = (timestep_day*(n-1)) + (timestep_hour*10);        % end morning peak
    beginningEP = (timestep_day*(n-1)) + (timestep_hour*16);  % beginning evening peak
    endEP = (timestep_day*(n-1)) + (timestep_hour*20);        % end evening peak
    beginningDay = (timestep_day*(n-1));

    % Declare all zeros in each loop
    TotalMorningWaterDemandDuringPeakPeriod = 0;
    TotalEveningWaterDemandDuringPeakPeriod = 0;
    TotalMorningPowerConsumption = 0;
    TotalEveningPowerConsumption = 0;
    TotalDailyPowerConsumption = 0;
    MorningTemperature = 0;
    EveningTemperature = 0;
    InletMorningWaterTemp = 0;
    InletEveningWaterTemp = 0;

    A(n,1) = n;                     % Day of the year
    A(n,2) = ds(beginningMP - 1,2); % Morning Temperature Before Peak Period
    A(n,4) = ds(endMP,2);           % Morning Temperature After Peak Period
    A(n,5) = ds(beginningEP - 1,2); % Evening Temperature Before Peak Period
    A(n,7) = ds(endEP,2);           % Evening Temperature After Peak Period

    for i=1:(4*timestep_hour)
        MorningTemperature = MorningTemperature + ds(beginningMP + i,2);       % Morning temp at each time step during peak period
        EveningTemperature = EveningTemperature + ds(beginningEP + i,2);       % Evening temp at each time step during peak period
        A(n,8) = A(n,8) + ds(beginningMP + i,7);                               % Total Morning Water Demand During Peak Period
        A(n,10) = A(n,10) + ds(beginningEP + i,7);                             % Total Evening Water Demand During Peak Period
        A(n,12) = A(n,12) + ((PowerRating * ds(beginningMP + i,3)/(60/timestep))/EWH_population); % Total Morning Power Consumption in kW
        A(n,14) = A(n,14) + ((PowerRating * ds(beginningEP + i,3)/(60/timestep))/EWH_population); % Total Evening Power Consumption in kW
        A(n,23) = A(n,23) + (ds(beginningMP + i,3)/EWH_population); % Total on morning
        A(n,24) = A(n,24) + (ds(beginningEP + i,3)/EWH_population); % Total on evening
        InletMorningWaterTemp = InletMorningWaterTemp + ds(beginningMP + i,5); % Total Inlet Temp
        InletEveningWaterTemp = InletEveningWaterTemp + ds(beginningEP + i,5); % Total Inlet Temp
    end

    A(n,3) = MorningTemperature/(4*timestep_hour);     % Average Morning Water Temperature During Peak Period
    A(n,6) = EveningTemperature/(4*timestep_hour);     % Average Evening Water Temperature During Peak Period
    A(n,9) = A(n,8)/(4);                               % Average Hourly Morning Water Demand During Peak Period
    A(n,11) = A(n,10)/(4);                             % Average Hourly Evening Water Demand During Peak Period
    A(n,13) = A(n,12)/(4);                             % Average Hourly Morning Power Consumption
    A(n,15) = A(n,14)/(4);                             % Average Hourly Evening Power Consumption
    A(n,18) = InletMorningWaterTemp/(4*timestep_hour); % Average Hourly Morning Inlet Water Temp
    A(n,19) = InletEveningWaterTemp/(4*timestep_hour); % Average Hourly Evening Inlet Water Temp
    for y=1:(timestep_day)
        A(n,16) = A(n,16) + ((PowerRating * ds(beginningDay + y,3)/(60/timestep))/EWH_population); % Total Daily Power Consumption
        A(n,22) = (A(n,22) + ds(beginningDay + y,7));            % total daily water consumption
        A(n,25) = A(n,25) + (ds(beginningDay + y,3)/EWH_population); % Total on day
    end
    A(n,17) = A(n,16)/(24); % Average Hourly Power Consumption per day
    A(n,20) = A(n,16) - A(n,14) - A(n,12); % Total offpeak power consumption
    A(n,21) = A(n,17) - A(n,15) - A(n,13); % Total offpeak power consumption
end
Errorbar;
% PowerConsumption;
% imwrite(Errorbar, strcat(Folder,'/Temperature.eps'),'eps');
% imwrite(PowerConsumption, strcat(Folder,'/Power.eps'),'eps');
% saveas(Errorbar,'Temperature','epsc
mkdir(Folder);
xlswrite(fullfile(Folder,strcat('Analysis_',Folder)),A);
movefile(currentEWH,Folder);
movefile('info.txt',Folder);
movefile('Temp&Power.eps',Folder);
movefile('Temperature.eps',Folder);
movefile('Power.eps',Folder);